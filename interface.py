# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'interface.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import *
from PyQt5.QtGui import *
import cv2

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(647, 595)
        font = QtGui.QFont()
        font.setPointSize(15)
        MainWindow.setFont(font)
        MainWindow.setMouseTracking(True)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("background-color: rgb(245, 245, 245);\n"
"")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.Open = QtWidgets.QPushButton(self.centralwidget)
        self.Open.setGeometry(QtCore.QRect(30, 490, 141, 61))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Open.sizePolicy().hasHeightForWidth())
        self.Open.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Montserrat Black")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        font.setKerning(False)
        self.Open.setFont(font)
        self.Open.setStyleSheet("background-color: white;\n"
"border-radius:25px;\n"
"border : 2px solid;\n"
"border-top-color : black;\n"
"border-left-color :black;\n"
"border-right-color :black;\n"
"border-bottom-color : black;\n"
"\n"
"")
        self.Open.setObjectName("Open")
        self.Close = QtWidgets.QPushButton(self.centralwidget)
        self.Close.setGeometry(QtCore.QRect(240, 490, 151, 61))
        font = QtGui.QFont()
        font.setFamily("Montserrat Black")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.Close.setFont(font)
        self.Close.setStyleSheet("background-color: black;\n"
"border-radius:25px;\n"
"color: white;")
        self.Close.setObjectName("Close")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 10, 601, 441))
        self.label.setStyleSheet("QLabel{margin-left: 10px; \n"
"border-radius: 35px; \n"
"background: white;\n"
" color: #4A0C46;\n"
"border : 2px solid;\n"
"border-top-color : black;\n"
"border-left-color :black;\n"
"border-right-color :black;\n"
"border-bottom-color : black;}")
        self.label.setText("")
        self.label.setObjectName("label")
        self.text = QtWidgets.QLabel(self.centralwidget)
        self.text.setGeometry(QtCore.QRect(40, 30, 51, 41))
        font = QtGui.QFont()
        font.setFamily("Montserrat Black")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.text.setFont(font)
        self.text.setStyleSheet("background:transparent;")
        self.text.setObjectName("text")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(470, 490, 141, 61))
        font = QtGui.QFont()
        font.setFamily("Montserrat Black")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: red;\n"
"color:white;\n"
"border-radius:25px;\n"
"border : 2px solid;\n"
"border-top-color : black;\n"
"border-left-color :black;\n"
"border-right-color :black;\n"
"border-bottom-color : black;\n"
"")
        self.pushButton.setObjectName("pushButton")
        self.label.raise_()
        self.text.raise_()
        self.pushButton.raise_()
        self.Close.raise_()
        self.Open.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 647, 21))
        self.menuBar.setObjectName("menuBar")
        MainWindow.setMenuBar(self.menuBar)
        self.pushButton.clicked.connect(self.salir)
        self.Open.clicked.connect(self.start_video)
        self.Close.clicked.connect(self.cancel)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
    def start_video(self):
        self.Work = Work()
        self.Work.start()
        self.Work.Imageupd.connect(self.Imageupd_slot)

    def Imageupd_slot(self, Image):
        self.label.setPixmap(QPixmap.fromImage(Image))
    def cancel(self):
        self.label.clear()
        self.Work.stop()
    def salir(self):
        sys.exit()




    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Open.setText(_translate("MainWindow", "START CAM "))
        self.Close.setText(_translate("MainWindow", "CLOSE CAM"))
        self.text.setText(_translate("MainWindow", "CAM"))
        self.pushButton.setText(_translate("MainWindow", "x"))

class Work(QThread):
    Imageupd = pyqtSignal(QImage)
    def run(self):
        self.hico_corriendo = True
        cap = cv2.VideoCapture(0)
        while self.hico_corriendo:
            ret, frame = cap.read()
            if ret:
                Image =  cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                flip = cv2.flip(Image,1)
                convertir_QT = QImage(flip.data, flip.shape[1], flip.shape[0],QImage.Format_RGB888)
                pic = convertir_QT.scaled(60, 440,Qt.KeepAspectRatio)
                pic = cv2.circle(pic, (300,220), 25,(0,0,0), thickness=2)
                self.Imageupd.emit(pic)
    def stop(self):
        self.hico_corriendo = False
        self.quit()



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
